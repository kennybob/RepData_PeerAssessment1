{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n\n## Loading and preprocessing the data\n\n```{r}\nunzip(\"activity.zip\")\n\nact_df <- read.csv(\"activity.csv\")\n```\n\n## What is mean total number of steps taken per day?\n```{r}\ntotal_steps_per_day <- tapply(act_df$steps, act_df$date, sum, na.rm = TRUE)\nhist(total_steps_per_day, main = \"Histogram of daily steps\", xlab = \"Number of steps\")\ncat(\"mean steps walked over all days: \",mean(total_steps_per_day, na.rm=TRUE), \"\\n\")\ncat(\"median steps walked over all days: \",median(total_steps_per_day, na.rm=TRUE), \"\\n\")\n```\n\n## What is the average daily activity pattern?\n```{r}\nmean_steps_per_interval <- tapply(act_df$steps, act_df$interval, mean, na.rm = TRUE)\n\n### tapply returns an array. I then convert to a dataframe\ndf <- as.data.frame(mean_steps_per_interval)\ndf$interval = rownames(df)\n\nplot(df$interval, df$mean_steps_per_interval, type =\"l\", xlab = \"Intervals\", ylab = \"Mean #steps per interval\", main = \"Average activity pattern over 24 hours\")\n\n### Calculating the interval with the highest average\ndf[df$mean_steps_per_interval==max(df$mean_steps_per_interval),1:2]\n```\n\n## Imputing missing values\n```{r}\n###The number of records with missing steps data is:\nsum(is.na(act_df[\"steps\"]))\n```\n\n###Plan is to fill blanks with mean values for the respective interval\n\n###Fill in the blanks\n```{r}\n###By joining our previously created data frame using the merge command, we can access the mean values\nlibrary(plyr)\nmergeDf <- join(act_df,df)\n\n###Now we can set the na values to be the interval means\nmergeDf[is.na(mergeDf[\"steps\"]), \"steps\"] = mergeDf[is.na(mergeDf[\"steps\"]),\"mean_steps_per_interval\"]\n```\n\n### Now recreate the histogram as before\n```{r}\ntotal_steps_per_day <- tapply(mergeDf$steps, mergeDf$date, sum)\nhist(total_steps_per_day, main = \"Histogram of daily steps (with na values replaced)\", xlab = \"Number of steps\")\ncat(\"mean steps walked over all days (with na values replaced): \",mean(total_steps_per_day, na.rm=TRUE), \"\\n\")\ncat(\"median steps walked over all days (with na values replaced): \",median(total_steps_per_day, na.rm=TRUE), \"\\n\")\n```\n\n## Are there differences in activity patterns between weekdays and weekends?\n```{r}\n### Add a new factor column that highlights whether the date is a weekday or not\nlibrary(lubridate)\nmergeDf_wk <- mutate(\n              mergeDf, wkend=factor(\n                                  weekdays(ymd(as.character(mergeDf$date))) %in% c(\"Saturday\", \"Sunday\")\n                                  , labels = c(\"Weekday\",\"Weekend\")))\n```\n\n#What is the average daily activity pattern?\n```{r}\n###Get the mean #steps grouping by interval and whether or not it was a weekend\nagg <- aggregate( mergeDf_wk[,\"steps\"], mergeDf_wk[,c(\"interval\",\"wkend\")], FUN = mean )\n\n###The resulting aggregate is held in the x column\nbig_join <- join(mergeDf_wk,agg)\n\nlibrary(lattice)\nxyplot(x~interval|wkend, data=big_join, layout=c(1,2), main = \"Average activity over 24 hours\", xlab = \"Interval\", ylab = \"Average steps per interval\", type = \"o\")\n```",
    "created" : 1428802108294.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1441136155",
    "id" : "BCBBF98B",
    "lastKnownWriteTime" : 1428807003,
    "path" : "~/GitHub/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}